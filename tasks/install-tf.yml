---
- name: "Read PlatformServices path"
  stat:
    path: "{{ base_root }}/endeca/PlatformServices/{{ ps_version }}"
  register: ps_dir

- name: "Get endeca user"
  set_fact:
    endeca_user: "{{ ps_dir.stat.pw_name }}"
    endeca_group: "{{ ps_dir.stat.gr_name }}"

- name: "Install requirements"
  package:
    name: "{{ requirements }}"
    state: "present"
  register: status
  until: status is succeeded
  become: True

- name: "Verify destination directory exists"
  file:
    owner: "{{ endeca_user }}"
    group: "{{ endeca_group }}"
    path: "{{ base_root }}/endeca"
    state: "directory"
    recurse: True
  become: True

# ToolsAndFrameworks versions lower 11.x
- name: "Install ToolsAndFrameworks {{ tf_version }}"
  block:

    - name: "Extract ToolsAndFrameworks"
      unarchive:
        src: "{{ tf_artifact }}"
        dest: "{{ base_root }}/endeca"
        owner: "{{ endeca_user }}"
        group: "{{ endeca_group }}"
        mode: "0755"

  become: True
  when: tf_version is version('11', '<')

# ToolsAndFrameworks versions higher 11.x
- name: "Install ToolsAndFrameworks {{ tf_version }}"
  block:

    - name: "Check oracle inventory requirements"
      include_tasks: "ora-inst/check-ora-inst.yml"

    - name: "Create swap file"
      include_tasks: "system/swap.yml"

    - name: "Extract ToolsAndFrameworks"
      unarchive:
        src: "{{ tf_artifact }}"
        dest: "{{ download_path }}"
        owner: "{{ endeca_user }}"
        group: "{{ endeca_group }}"
        mode: "0755"
      become: True

    # check component type: oracle.endeca.commerce or oracle.endeca.guidedsearch
    - name: "Read ToolsAndFrameworks component type"
      find:
        paths: "{{ download_path }}/cd/Disk1/stage"
        file_type: "file"
        patterns: "oracle.endeca.commerce.*"
        use_regex: True
      become: True
      register: commerce_type

    - name: "Update install group in silent.rsp"
      lineinfile:
        path: "{{ download_path }}/cd/Disk1/install/silent_response.rsp"
        regexp: "^UNIX_GROUP_NAME=\"dba\""
        line: "UNIX_GROUP_NAME=\"{{ install_group }}\""
      become: True

    - name: "Update install type in in silent.rsp"
      lineinfile:
        path: "{{ download_path }}/cd/Disk1/install/silent_response.rsp"
        regexp: "^INSTALL_TYPE=\"Complete Installation\""
        line: "INSTALL_TYPE=\"{{ install_type }}\""
      become: True

    - name: "Set args for silent installation for {{ tf_version }}"
      set_fact:
        silent_args: >-
          {{ download_path }}/cd/Disk1/install/silent_response.rsp ToolsAndFrameworks
          {{ base_root }}/endeca/ToolsAndFrameworks {{ workbench_password }}
      when: tf_version is version ('11.1.0', '<=')

    - name: "Set args for silent installation for {{ tf_version }}"
      set_fact:
        silent_args: >-
          {{ download_path }}/cd/Disk1/install/silent_response.rsp
          ToolsAndFrameworks {{ base_root }}/endeca/ToolsAndFrameworks
      when: tf_version is version ('11.1.0', '>')

    - name: "Install ToolsAndFrameworks {{ tf_version }}"
      command: "./silent_install.sh {{ silent_args }}"
      args:
        chdir: "{{ download_path }}/cd/Disk1/install"
      register: tf_install
      become_user: "{{ endeca_user }}"
      become: True
      failed_when: "'Install successful' not in tf_install.stdout_lines"

    # runs only for first product on target node installed using oracle universal installer
    - name: "Run orainstRoot.sh"
      command: "/home/{{ endeca_user }}/oraInventory/orainstRoot.sh"
      become: True
      when: not ora_file.stat.exists | bool

  when: tf_version is version ('11', '>=')

- name: "Create service section"
  block:

    - name: "Create endeca pid directory"
      file:
        path: "{{ pid_dir }}"
        owner: "{{ endeca_user }}"
        group: "{{ endeca_group }}"
        state: "directory"

    - name: "Read ToolsAndFrameworks apache directory"
      find:
        paths: "{{ tf_path }}/server"
        file_type: "directory"
        patterns: "apache-tomcat-."
        use_regex: True
      register: tf_apache

    - name: "Update pid location"
      lineinfile:
        path: "{{ tf_apache.files[0].path }}/bin/setenv.sh"
        regexp: "CATALINA_PID=.*"
        line: "CATALINA_PID={{ pid_dir }}/{{ tf_service }}.pid"
        create: True
        owner: "{{ endeca_user }}"
        group: "{{ endeca_group }}"
        mode: "0755"

    - name: "Create ToolsAndFrameworks service"
      template:
        src: "toolsandframeworks_service.j2"
        dest: '{{ tf_service_path }}/{{ tf_service_script }}'
        mode: '{{ tf_service_script_mode }}'
        force: True

    - name: "Reload systemd configuration"
      systemd:
        daemon_reload: True
      when: ansible_facts.service_mgr == "systemd"

    - name: "Restart toolsandframworks service"
      service:
        name: "{{ tf_service }}"
        enabled: True
        state: "started"

  become: True

# ToolsAndFrameworks versions higher 11.2
- name: "Update workbench password"
  include_tasks: "update-workbench-password.yml"
  when: tf_version is version ('11', '>=')
